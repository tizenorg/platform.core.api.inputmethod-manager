diff --git a/CMakeLists.txt b/CMakeLists.txt
index ffd2ab7..68cf8bf 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -7,7 +7,7 @@ SET(maintainer "Sungmin Kwak <sungmin.kwak@samsung.com>")
 SET(description "Input Method Manager APIs")
 SET(service "ui")
 SET(submodule "inputmethod-manager")
-SET(dependents "capi-base-common dlog isf")
+SET(dependents "capi-base-common dlog isf cynara-client")
 SET(LIBDIR ${LIB_INSTALL_DIR})
 
 SET(Services
diff --git a/packaging/capi-ui-inputmethod-manager.spec b/packaging/capi-ui-inputmethod-manager.spec
index 85702c8..b76f789 100644
--- a/packaging/capi-ui-inputmethod-manager.spec
+++ b/packaging/capi-ui-inputmethod-manager.spec
@@ -9,6 +9,7 @@ BuildRequires:  cmake
 BuildRequires:  pkgconfig(capi-base-common)
 BuildRequires:  pkgconfig(dlog)
 BuildRequires:  pkgconfig(isf)
+BuildRequires:  pkgconfig(cynara-client)
 Requires(post): /sbin/ldconfig
 Requires(postun): /sbin/ldconfig
 
@@ -58,6 +59,7 @@ cp LICENSE %{buildroot}/usr/share/license/%{name}
 
 %files devel
 %{_includedir}/inputmethod_manager*.h
+%{_includedir}/privilege_checker*.h
 %{_libdir}/pkgconfig/*.pc
 %{_libdir}/libcapi-ui-inputmethod-manager.so
 
diff --git a/src/inputmethod_manager.cpp b/src/inputmethod_manager.cpp
old mode 100644
new mode 100755
index 4e4e801..303f05a
--- a/src/inputmethod_manager.cpp
+++ b/src/inputmethod_manager.cpp
@@ -14,10 +14,13 @@
  * limitations under the License.
  */
 
+#include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 #include "isf_control.h"
 #include <dlog.h>
+#include <unistd.h>
+#include <privilege_checker.h>
 #include <inputmethod_manager.h>
 
 #ifdef LOG_TAG
@@ -25,8 +28,38 @@
 #endif
 #define LOG_TAG "INPUTMETHOD_MANAGER"
 
+ime_manager_error_e _check_privilege()
+{
+    char uid[16]; char pid[16];
+
+    if(inputmethod_cynara_initialize () == false){
+        LOGE("inputmethod_cynara_initialize () == false");
+        return IME_MANAGER_ERROR_PERMISSION_DENIED;
+    }
+
+    snprintf(uid, 16, "%d", getuid());
+    snprintf(pid, 16, "%d", getpid());
+    if(checkPrivilege(uid, IME_MANAGER_PRIVILEGE) == false){
+        LOGE("checkPrivilege(uid, IME_MANAGER_PRIVILEGE) == false   ");
+        LOGE("uid : %s.", uid);
+        LOGE("uid : %s.", pid);
+        return IME_MANAGER_ERROR_PERMISSION_DENIED;
+    }
+
+    return IME_MANAGER_ERROR_NONE;
+}
+
 int ime_manager_show_ime_list(void)
 {
+    ime_manager_error_e retVal = IME_MANAGER_ERROR_NONE;
+
+    retVal = _check_privilege();
+    if (retVal != IME_MANAGER_ERROR_NONE) {
+        LOGE("_check_privilege returned %d.", retVal);
+        return retVal;
+    }
+    inputmethod_cynara_finish ();
+
     int ret = isf_control_show_ime_list();
     if (ret == 0)
         return IME_MANAGER_ERROR_NONE;
@@ -38,6 +71,15 @@ int ime_manager_show_ime_list(void)
 
 int ime_manager_show_ime_selector(void)
 {
+    ime_manager_error_e retVal = IME_MANAGER_ERROR_NONE;
+
+    retVal = _check_privilege();
+    if (retVal != IME_MANAGER_ERROR_NONE) {
+        LOGE("_check_privilege returned %d.", retVal);
+        return retVal;
+    }
+    inputmethod_cynara_finish ();
+
     int ret = isf_control_show_ime_selector();
     if (ret == 0)
         return IME_MANAGER_ERROR_NONE;
@@ -49,6 +91,15 @@ int ime_manager_show_ime_selector(void)
 
 int ime_manager_is_ime_enabled(const char *app_id, bool *enabled)
 {
+    ime_manager_error_e retVal = IME_MANAGER_ERROR_NONE;
+
+    retVal = _check_privilege();
+    if (retVal != IME_MANAGER_ERROR_NONE) {
+        LOGE("_check_privilege returned %d.", retVal);
+        return retVal;
+    }
+    inputmethod_cynara_finish ();
+
     if (!app_id || !enabled) {
         LOGW("IME_MANAGER_ERROR_INVALID_PARAMETER");
         return IME_MANAGER_ERROR_INVALID_PARAMETER;
@@ -65,6 +116,15 @@ int ime_manager_is_ime_enabled(const char *app_id, bool *enabled)
 
 int ime_manager_get_active_ime(char **app_id)
 {
+    ime_manager_error_e retVal = IME_MANAGER_ERROR_NONE;
+
+    retVal = _check_privilege();
+    if (retVal != IME_MANAGER_ERROR_NONE) {
+        LOGE("_check_privilege returned %d.", retVal);
+        return retVal;
+    }
+    inputmethod_cynara_finish ();
+
     if (!app_id) {
         LOGW("IME_MANAGER_ERROR_INVALID_PARAMETER");
         return IME_MANAGER_ERROR_INVALID_PARAMETER;
